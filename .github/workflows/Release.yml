# This is a basic workflow to help you get started with Actions

name: Create Release Draft

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  create_release_draft:
    # The type of runner that the job will run on
    #runs-on: self-hosted
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
            maven-version: 3.8.2

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B package --file ./Codebase/genderly/pom.xml


      - name: Assemble Prototyp_IT20_KursB_8
        run: |
          mkdir Prototyp_IT20_KursB_8
          mv ./Codebase/genderly/target/genderly.jar ./Prototyp_IT20_KursB_8/genderly.jar
          mv ./Codebase/genderly/data ./Prototyp_IT20_KursB_8/data
          mv ./Codebase/genderly/run_windows.bat ./Prototyp_IT20_KursB_8/run_windows.bat
          mv ./Codebase/genderly/run_linux.sh ./Prototyp_IT20_KursB_8/run_linux.sh
          mv ./Codebase/genderly/run_macos.sh ./Prototyp_IT20_KursB_8/run_macos.sh
          

      - name: Create Zip
        # You may pin to the exact commit or the version.
        # uses: vimtor/action-zip@5f1c4aa587ea41db1110df6a99981dbe19cee310
        uses: vimtor/action-zip@v1
        with:
          # Files or directories to zip
          files: |
           /Prototyp_IT20_KursB_8
           
          # Name of output zip file
          dest: Prototyp_IT20_KursB_8.zip
          # Whether to add subdirectories to simply zip all files to the root
          recursive: false


      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'
        
      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7

      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
          echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
          echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
          echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
          echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
          echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
          echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
          echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
          echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
          echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
          echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
          echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
          echo "EscapedBranchName: ${{ steps.gitversion.outputs.escapedBranchName }}"
          echo "Sha: ${{ steps.gitversion.outputs.sha }}"
          echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
          echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
          echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
          echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
          echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
          echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
          echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
          echo "UncommittedChanges: ${{ steps.gitversion.outputs.uncommittedChanges }}"
          echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"
        
      - uses: gittools/actions/gitreleasemanager/setup@v0.9.2
        name: Install GitReleaseManager
        with:
          versionSpec: '0.10.x'
          
      - uses: gittools/actions/gitreleasemanager/create@v0.9.10
        name: Create release with GitReleaseManager
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          milestone: '${{ steps.gitversion.outputs.majorMinorPatch }}'
          name: 'v${{ steps.gitversion.outputs.semVer }}'
          owner: 'HWR-Berlin-SWE-I-Gruppe-2-Team-3-2021'
          repository: 'Genderly'
          assets: |
            ./Prototyp_IT20_KursB_8.zip

            
